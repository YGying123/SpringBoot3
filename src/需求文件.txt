用户在前端输入账户和密码.以及校验码（todo）
校验用户的账户、密码、校验密码，是否符合要求
a、非空
b账户长度不小于4位
c密码就不小于8位
d账户不能重复
e账户不包含特殊字符
f密码和校验密码相同
对密码进行加密（密码千万不要直接以明文存储到数据库中）
向数据库插入用户数据



简单说明cookie和session
cookie是一种缓存机制,session是会话机制
已最常见的登录案例简洁cookie的使用过程
首先用户在客户端浏览器向服务器首次发起登录请求
登陆成功后,服务端会把登录的用户信息设置在cookie中,并键cookie返回给客户端浏览器
客户端浏览器接收到cookie请求后,会把cookie保存到本地可能是内存，也可能是磁盘
以后再次访问该web应用时,客户端浏览器就会把本地的cookie带上，这样服务端就能根据cookie获得用户信息

同样以登录案例为例子讲解session的使用过程
首先用户在客户端浏览器发送登陆请求
登陆成功后，服务端会把用户信息保存在服务端，并返回一个唯一的session标识给客户端浏览器
客户端浏览器会把这个唯一的ssesion标识保存在起来
有再次访问web应用时,客户端浏览器会把和这个唯一的session标识带上,这样服务端就能根据这个唯一标识找到用户信息




多环境:
指同一套项目代码 在不同的阶段 根据实际情况 部署到不同的机器 并且 要根据实际情况调整配置并且部署到不同的机器上
多环境 每个环境互不影响 为了区分不同的阶段  开发/测试
对项目进行优化
针对不同环境做不同的事情


多环境 分类

开发环境 远程开发（大家连同一台机器 为了大家开发更方便）
本地环境 localhost
测试环境 （（测试）开发/开发/产品）性能测试 功能测试 单元测试 系统集成测试（独立的数据库 、独立的服务器）
预发布环境 体验服 基本和正式环境一致 可以更严谨 发现更多问题
正式环境  尽量不要改动  保证上线前的代码时完美运行
沙箱环境（实验环境）




本地开发
localhost




第三部改依赖的环境地址
 数据库地址
 缓存地址
 消息队列地址
 项目端口号
 服务器配置

